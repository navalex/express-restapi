version: '3.1'
services:
    postgres:
        image: postgres
        restart: on-failure
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}

    api:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile
        command: ["sh", "./bin/start.sh", "api"]
        restart: unless-stopped
        environment:
            PORT: ${API_PORT}
            SOCKET_PORT: ${SOCKET_PORT}
            POSTGRES_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
        volumes:
            - ./:/opt/app
        ports:
            - '${API_PORT}:${API_PORT}'
        depends_on:
            - postgres
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:${API_PORT}/health"]
            interval: 30s
            timeout: 10s
            retries: 5

    prisma:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile
        command: ["sh", "./bin/start.sh", "pstudio"]
        restart: unless-stopped
        environment:
            POSTGRES_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
        volumes:
            - ./:/opt/app
        ports:
            - '5555:5555'
        depends_on:
            - postgres
            - api

volumes:
    mongo-data:
    postgres-data:
